<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo + Next 的优化]]></title>
    <url>%2F2017%2F08%2F01%2FHexo-Next-%E7%9A%84%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[本文是在建站的中途开始写的，记录一下自己修改的部分和使用的方法，仅供参考。 修改过程修改心得在记录以下内容之前，我已经借鉴其他博主的博文，对站点进行了一些修改(其中包括简单的动画，和对代码块的修改) 在进行代码块修改之后，总结了一个小套路： 首先确定好自己想要修改的模块 使用浏览器的检查元素，可以找到对应的模块的css样式 然后先在检察元素模式下对css样式进行修改 然后把原先的css样式复制，用Sublime的Find in Files，找到对应文件(一般在自己使用的主题目录下,比如我是Next目录下的文件中)，对文件进行修改就可以了 这样就不需要想修改说明就去搜索啦 ~ (我的blockquote的样式修改就是这样完成的~) 修改 blockquote(引言) 样式 在Chrome下右键检查元素，我的组件显示在浏览器右侧，选中blockquote模块，则原有的css样式如下 12345678910111213141516blockquote &#123;padding: 0 15px;color: #666;border-left: 4px solid #ddd;&#125;blockquote &#123; margin: 0; padding: 0;&#125;blockquote &#123; display: block; -webkit-margin-before: 1em; -webkit-margin-after: 1em; -webkit-margin-start: 40px; -webkit-margin-end: 40px;&#125; 在样式中color: #666定义了内部文字的颜色，border-left: 4px solid #ddd定义了左边的侧边栏的颜色。 然后我们就可以对其进行修改啦 ~ 复制border-left: 4px solid #ddd;在Sublime里搜索，找到对应文件。 注意自己在Find Results判断，哪个是原有的文件，哪个是后来生成的。 我的搜索结果是\themes\next\source\css\_common\scaffolding\base.styl，因此开心地自己修改啦~ 修改结果，嘛，就跟本文的第一句一样了。这里提供几种配色方案~（自己从图片上取色做的配色，慎用） 12345678910111213141516171819//异色红绿color: #108c89;border: 1px solid #f1756d;border-left: 5px solid #f14e49;//棕色系color: #8b7462;border: 1px solid #8b7462;border-left: 5px solid #bd3b45;//蓝色系color: #328daa;border: 1px solid #8ed3f4;border-left: 5px solid #8ed3f4;//异色橙绿color: #9ba646;border: 1px solid #f29d4c;border-left: 5px solid #f29d4c;]]></content>
      <categories>
        <category>TRY</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端动画收集]]></title>
    <url>%2F2017%2F07%2F28%2F%E5%89%8D%E7%AB%AF%E5%8A%A8%E7%94%BB%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[fullPage.js学习]]></title>
    <url>%2F2017%2F07%2F27%2FfullPage-js%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[(一) fullPage.js插件fullPage.js是基于JQuery的插件，因此在引入之前需要先引入jQuery 使用github官方地址引入最新版本 最新版本在文件夹dist中，可以打开文件夹，选择对应的jquery.fullpage.js(css)文件，在html中可直接如下引入： 123456&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt;&lt;script src = "https://rawgit.com/alvarotrigo/fullPage.js/master/dist/jquery.fullpage.css"&gt;&lt;/script&gt;&lt;script src = "https://rawgit.com/alvarotrigo/fullPage.js/master/dist/jquery.fullpage.js"&gt;&lt;/script&gt; 小技巧 在使用github原码时，一般在点击raw的时候的地址形如:https://raw.githubusercontent.com/username/repository/branch/folder/file.如果直接引入这个地址，应该会在console中报错为“js文件不是可执行的”只需要把前面的raw.githubusercontent.com改成rawgit.com即可 从cdnjs引入固定版本 123456&lt;link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.9.4/jquery.fullpage.css"&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.9.4/jquery.fullpage.js"&gt;&lt;/script&gt; 当然，也可以自行下载js文件，直接从本地引入，这样就不需要担心自己在写网页的时候会遇到网络问题啦 ~&gt; $\omega$ &lt;~ (二) fullPage.js整体布局(正在编辑中…….)]]></content>
      <categories>
        <category>Learn</category>
      </categories>
      <tags>
        <tag>前端学习</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
</search>