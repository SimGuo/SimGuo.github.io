<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Always with Sunshine</title>
  <subtitle>—— growth of a fruit seed</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://simguo.github.io/"/>
  <updated>2017-08-03T17:22:05.384Z</updated>
  <id>https://simguo.github.io/</id>
  
  <author>
    <name>果果茶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在hexo+next博文中使用codepen</title>
    <link href="https://simguo.github.io/2017/08/03/%E5%9C%A8hexo-next%E5%8D%9A%E6%96%87%E4%B8%AD%E4%BD%BF%E7%94%A8codepen/"/>
    <id>https://simguo.github.io/2017/08/03/在hexo-next博文中使用codepen/</id>
    <published>2017-08-03T15:25:02.000Z</published>
    <updated>2017-08-03T17:22:05.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Above-All"><a href="#Above-All" class="headerlink" title="Above All"></a>Above All</h2><p>在平时学习与前端有关的知识时，经常可以看到一些博客中嵌入的展示<code>css + js + html</code>的结果，可以非常直观的体现介绍的内容在Result上的作用，因此，简单了解了一下。</p>
<p>实现在博文中嵌入<code>codepen</code>只需要下面几步走~</p>
<hr>
<h2 id="你将得到的结果"><a href="#你将得到的结果" class="headerlink" title="你将得到的结果"></a>你将得到的结果</h2><p>下面这个样例已经在之前的博文 <a href="https://simguo.github.io/2017/07/27/fullPage-js%E5%AD%A6%E4%B9%A0/"><i class="fa fa-book"></i> fullPage.js学习</a> 使用过了。下面我将演示如何将其插入文档。</p>
<iframe height="265" scrolling="no" title="FullPage_Example" src="//codepen.io/SimGuo/embed/vJXrjw/?height=265&theme-id=light&default-tab=js,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="https://codepen.io/SimGuo/pen/vJXrjw/" target="_blank" rel="external">FullPage_Example</a> by SimGuo (<a href="https://codepen.io/SimGuo" target="_blank" rel="external">@SimGuo</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe>

<hr>
<h2 id="注册一个codepen账号"><a href="#注册一个codepen账号" class="headerlink" title="注册一个codepen账号"></a>注册一个codepen账号</h2><p>官网传送门 <a href="https://codepen.io/" target="_blank" rel="external"><i class="fa fa-link"></i> https://codepen.io/</a></p>
<p>对于嵌入<code>codepen</code>来讲，我觉得免费账号就够用啦。</p>
<h2 id="创建一个新的Pen"><a href="#创建一个新的Pen" class="headerlink" title="创建一个新的Pen"></a>创建一个新的Pen</h2><p><i class="fa fa-circle-o"></i> 打开首页，点击右上角的Create-&gt;new pen来创建。</p>
<p style="position: relative; padding: 5px 5px; color: white; background: black; border-radius: 3px; width: 120px; margin-left: 20px;"> Create <i class=" fa fa-chevron-right"></i> New Pen </p> 

<p><i class="fa fa-circle-o"></i> 则你面前会是这样一块可供编辑的页面（这里我调整了设置），然后就可以愉快地直接写html和css以及js，也可以直接<code>ctrl+s</code>来保存，而页面下侧是实时的效果。</p>
<p><img src="/img/20170803/layout1.PNG"></p>
<p><i class="fa fa-circle-o"></i> 因为我觉得默认的黑色的模式没有白色好看，所以我的调整是：</p>
<p style="position: relative; padding: 5px 5px; color: white; background: black; border-radius: 3px; width: 110px; margin-left: 20px;"> 头像 <i class=" fa fa-chevron-right"></i> Settings </p> 

<p>打开后是这样的界面：</p>
<p><img src="/img/20170803/layout2.PNG"></p>
<p>我的选择是：</p>
<table>
<thead>
<tr>
<th style="text-align:center">设置项</th>
<th style="text-align:center">选择</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Syntax Highlighting</td>
<td style="text-align:center">MDN Like</td>
</tr>
<tr>
<td style="text-align:center">Code Font Family</td>
<td style="text-align:center">Source Code Pro, 12px</td>
</tr>
</tbody>
</table>
<h2 id="在你的Pen中引入外部库"><a href="#在你的Pen中引入外部库" class="headerlink" title="在你的Pen中引入外部库"></a>在你的Pen中引入外部库</h2><p>因为在pen中是直接根据你提供的js等代码生成的，所以外部js的使用也是需要知道的比较重要的事情。</p>
<p>点击右上角的<code>settings</code>，得到类似下面的界面</p>
<p><img src="/img/20170803/extern.PNG"></p>
<p>选择需要引入的文件类型，比如我使用了<code>jQuery.js + fullpage.js</code>，则在<code>Add External JavaScript</code>下面加了两者的链接。</p>
<h2 id="在文章中引入Codepen的展示窗口"><a href="#在文章中引入Codepen的展示窗口" class="headerlink" title="在文章中引入Codepen的展示窗口"></a>在文章中引入Codepen的展示窗口</h2><p>假定你在Codepen中愉快地编辑好了一个项目，现在想把它加到文件中，就只剩下复制粘贴了~</p>
<p style="color: #9BC53D;"> <i class="fa fa-star" style="color: #9BC53D; font-size: 25px;"></i> 点击右下角的 Embed，得到下面界面</p>

<p><img src="/img/20170803/res.PNG"></p>
<p style="color: #9BC53D;"> <i class="fa fa-star" style="color: #9BC53D; font-size: 25px;"></i> 你可以在Theme中调整颜色主题 </p>

<p style="color: #9BC53D;"> <i class="fa fa-star" style="color: #9BC53D; font-size: 25px;"></i> 将最下面提供的html和iframe代码直接复制粘贴到文中相应位置即可，如下是本文开头的文本 </p>

<p><img src="/img/20170803/article.PNG"></p>
<p>果然还是很简单的操作啦。不过需要注意的一点是，选择<code>iframe</code>可能会更好一些，因为我在使用<code>html</code>插入文章前面的情况下，会导致markdown文件后面产生问题。但使用<code>iframe</code>没有遇到问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Above-All&quot;&gt;&lt;a href=&quot;#Above-All&quot; class=&quot;headerlink&quot; title=&quot;Above All&quot;&gt;&lt;/a&gt;Above All&lt;/h2&gt;&lt;p&gt;在平时学习与前端有关的知识时，经常可以看到一些博客中嵌入的展示&lt;code&gt;css +
    
    </summary>
    
      <category term="JustForFun" scheme="https://simguo.github.io/categories/JustForFun/"/>
    
    
      <category term="前端" scheme="https://simguo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="博客" scheme="https://simguo.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://simguo.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://simguo.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Next 的优化</title>
    <link href="https://simguo.github.io/2017/08/01/Hexo-Next-%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <id>https://simguo.github.io/2017/08/01/Hexo-Next-的优化/</id>
    <published>2017-08-01T15:05:00.000Z</published>
    <updated>2017-08-03T15:26:51.621Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文是在建站的中途开始写的，记录一下自己修改的部分和使用的方法，仅供参考。</p>
</blockquote>
<hr>
<h1 id="样式页面样式修改"><a href="#样式页面样式修改" class="headerlink" title="样式页面样式修改"></a>样式页面样式修改</h1><h2 id="整体修改思路"><a href="#整体修改思路" class="headerlink" title="整体修改思路"></a>整体修改思路</h2><p>在记录以下内容之前，我已经借鉴其他博主的博文，对站点进行了一些修改(其中包括简单的动画，和对代码块的修改)</p>
<p>在进行代码块修改之后，总结了一个小套路：</p>
<ul>
<li>首先确定好自己想要修改的模块</li>
<li>使用浏览器的<code>检查元素</code>，可以找到对应的模块的<code>css样式</code></li>
<li>然后先在检察元素模式下对css样式进行修改，调整出自己喜欢的样式</li>
<li><strong>最后把原先的css样式复制，用Sublime的Find in Files，找到对应文件(一般在自己使用的主题目录下,比如我是Next目录下的文件中)，对文件进行修改就可以了</strong></li>
</ul>
<p>这样就不需要想修改说明就去搜索啦 ~ (我的<code>blockquote</code>的样式修改就是这样完成的~)</p>
<h2 id="修改-blockquote-引言-样式"><a href="#修改-blockquote-引言-样式" class="headerlink" title="修改 blockquote(引言) 样式"></a>修改 blockquote(引言) 样式</h2><p>在Chrome下右键<code>检查元素</code>，我的组件显示在浏览器右侧，选中<code>blockquote</code>模块，则原有的css样式如下</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">blockquote</span> &#123;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">    <span class="attribute">border-left</span>: <span class="number">4px</span> solid <span class="number">#ddd</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">blockquote</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">blockquote</span> &#123;</div><div class="line">    <span class="attribute">display</span>: block;</div><div class="line">    <span class="attribute">-webkit-margin-before</span>: <span class="number">1em</span>;</div><div class="line">    <span class="attribute">-webkit-margin-after</span>: <span class="number">1em</span>;</div><div class="line">    <span class="attribute">-webkit-margin-start</span>: <span class="number">40px</span>;</div><div class="line">    <span class="attribute">-webkit-margin-end</span>: <span class="number">40px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在样式中<code>color: #666</code>定义了内部文字的颜色，<code>border-left: 4px solid #ddd</code>定义了左边的侧边栏的颜色。然后我们就可以对其进行修改啦 ~ </p>
<ul>
<li><p>复制<code>border-left: 4px solid #ddd;</code>在Sublime里搜索，找到对应文件。</p>
</li>
<li><p>注意自己在<code>Find Results</code>判断，哪个是原有的文件，哪个是后来生成的。</p>
</li>
<li><p>我的搜索结果是<code>\themes\next\source\css\_common\scaffolding\base.styl</code>，因此开心地自己修改啦~</p>
</li>
</ul>
<p>修改结果，嘛，就跟本文的第一句一样了。这里提供几种配色方案~（自己从图片上取色做的配色，慎用）</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">//异色红绿</div><div class="line">color: #108c89;</div><div class="line">border: 1px solid #f1756d;</div><div class="line">border-left: 5px solid #f14e49;</div><div class="line">//棕色系</div><div class="line">color: #8b7462;</div><div class="line">border: 1px solid #8b7462;</div><div class="line">border-left: 5px solid #bd3b45;</div><div class="line">//蓝色系</div><div class="line">color: #328daa;</div><div class="line">border: 1px solid #8ed3f4;</div><div class="line">border-left: 5px solid #8ed3f4;</div><div class="line">//异色橙绿</div><div class="line">color: #9ba646;</div><div class="line">border: 1px solid #f29d4c;</div><div class="line">border-left: 5px solid #f29d4c;</div></pre></td></tr></table></figure>
<h2 id="在网页中使用外部字体"><a href="#在网页中使用外部字体" class="headerlink" title="在网页中使用外部字体"></a>在网页中使用外部字体</h2><p>在网页中定义外部字体大概有三种方式，可参考博文 <a href="https://www.qianduan.net/how-to-use-personalized-fonts-in-web-design/" target="_blank" rel="external"><i class="fa fa-book"></i>如何在网页设计中使用个性化字体</a>。</p>
<p>我选用的是利用css3的<code>@font-face</code>方式，先前我都是直接在源文件上修改的，其实为了避免自己修改的时候出差错难以恢复，可以在<code>/theme/next/source/css/_custom/custom.styl</code>中添加定义。这里我选择的字体是 <a href="https://www.qianduanmei.com/15-Amazing-Free-Fonts-for-Designers/" target="_blank" rel="external"><i class="fa fa-book"></i>15设计师常用英文字体</a> 一文中提到的YeahPapa。步骤如下：</p>
<ul>
<li>下载对应字体的ttf文件（当然font-face支持的其他类型文件均可，可见“如何在网页设计中…”一文</li>
<li>将ttf文件放在<code>\theme\source\fonts\</code>文件夹中</li>
<li><p>在<code>/theme/next/source/css/_custom/custom.styl</code>中添加：</p>
 <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">font-face</span> &#123;</div><div class="line">    <span class="attribute">font-family</span>: YeahPapa;</div><div class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'/fonts/YeahPapa.ttf'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>然后在自己想使用的地方使用<code>font-family:&#39;YeahPapa&#39;</code>即可</p>
</li>
</ul>
<p>完成效果参考下一节的 <strong>在文章尾部添加End</strong></p>
<h2 id="修改超链接样式"><a href="#修改超链接样式" class="headerlink" title="修改超链接样式"></a>修改超链接样式</h2><p>依然在<code>/theme/next/source/css/_custom/custom.styl</code>中修改，添加如下代码：</p>
<h3 id="——-修改颜色"><a href="#——-修改颜色" class="headerlink" title="—— 修改颜色"></a>—— 修改颜色</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span> &#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#6975a7</span>;</div><div class="line">    <span class="attribute">text-decoration</span>: none;</div><div class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#6465a5</span>;</div><div class="line">    <span class="attribute">background-color</span>: transparent;</div><div class="line">    <span class="attribute">word-wrap</span>: break-word;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span>: <span class="selector-tag">hover</span>&#123;</div><div class="line">    <span class="attribute">color</span>:<span class="number">#f15838</span>;</div><div class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#f28a31</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中<code>a</code>定义了超链接的基本样式，<code>a:hover</code>定义了超链接在鼠标悬停时颜色的变化。<code>.post-body</code>使得改变的样式只作用与文章内部，否则你会发现文章标题下面的分类等等样式都会被改变。</p>
<h3 id="——-菜单鼠标悬停后样式"><a href="#——-菜单鼠标悬停后样式" class="headerlink" title="—— 菜单鼠标悬停后样式"></a>—— 菜单鼠标悬停后样式</h3><p>增加如下内容（其中<code>“\5B” &amp; “\5D”</code>是<code>[ &amp; ]</code>符号在css中对应的编码 ）：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.menu</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#0ABDA0</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.menu</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123; </div><div class="line">    <span class="attribute">content</span>: <span class="string">"\5B"</span>;</div><div class="line">    <span class="attribute">left</span>: -<span class="number">10px</span>; </div><div class="line">&#125;</div><div class="line"><span class="selector-class">.menu</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</div><div class="line">    <span class="attribute">content</span>: <span class="string">"\5D"</span>;</div><div class="line">    <span class="attribute">right</span>:-<span class="number">10px</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="——-增加font-awesome符号"><a href="#——-增加font-awesome符号" class="headerlink" title="—— 增加font-awesome符号"></a>—— 增加font-awesome符号</h3><p>在文章可以直接使用如下代码即可使用<code>font-awesome</code>符号</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;i class="fa fa-paper-plane"&gt;&lt;/i&gt;</div></pre></td></tr></table></figure>
<p><i class="fa fa-paper-plane"></i> 则可以得到左边的图标，这里提供一个可以查阅所有font-awesome符号的页面</p>
<p><a href="https://9iphp.com/fa-icons" target="_blank" rel="external"><i class="fa fa-book"></i> FontAwesome 4.7.0 中完整的675个图标样式CSS参考</a></p>
<p>上面的超链接在markdown文件中的内容是<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="string">&lt;i class="fa fa-book"&gt;&lt;/i&gt; FontAwesome 4.7.0 中完整的675个图标样式CSS参考</span>](<span class="link">https://9iphp.com/fa-icons</span>)</div></pre></td></tr></table></figure></p>
<p>不过，因为我配置的next主题下font-awesome的版本不是4.7.0，所以我直接下载了4.7.0版本的font-awesome的css文件，替换了<code>\theme\next\source\lib\font-awesome\css\</code>中的文件</p>
<hr>
<h1 id="文章布局修改"><a href="#文章布局修改" class="headerlink" title="文章布局修改"></a>文章布局修改</h1><h2 id="整体修改思路-1"><a href="#整体修改思路-1" class="headerlink" title="整体修改思路"></a>整体修改思路</h2><p>在<code>\themes\layout\_macro\post.swig</code>中是文章的整体定义。利用Sublime将局部收起，我们可以很清晰地看到文章的整体架构，因此，在如果想在文章头部或者尾部增加一些元素，或者调整文章局部元素，都可以通过修改<code>post.swig</code>中的部分代码实现。</p>
<h2 id="在文章尾部添加End"><a href="#在文章尾部添加End" class="headerlink" title="在文章尾部添加End"></a>在文章尾部添加End</h2><p>根据思路，可以看到<code>post.swig</code>中文章结束应该是在<code>&lt;div class=&quot;post-body.....&lt;/div&gt;</code>之后，后面是微信打赏部分<code>&#39;wechat-subscriber.swig&#39;</code>，在两者中间添加自己定义的样式的结束标志即可~</p>
<p>例如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color:#73a2c0;font-size:25px;padding-top:40px;font-family:'YeahPapa';"</span>&gt;</span></div><div class="line">    ---------------- ♥ The End ♥ ----------------</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>熟悉html和css的同学可以自己定义字体，颜色，大小啦 ~ 也可以自己试着定义canvas动画。</p>
<h1 id="让谷歌和百度搜索到自己在GitHub上的博客"><a href="#让谷歌和百度搜索到自己在GitHub上的博客" class="headerlink" title="让谷歌和百度搜索到自己在GitHub上的博客"></a>让谷歌和百度搜索到自己在GitHub上的博客</h1><p><a href="https://maxwellyue.github.io/2016/08/07/%E5%A6%82%E4%BD%95%E8%AE%A9%E8%B0%B7%E6%AD%8C%E5%92%8C%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%E5%88%B0%E8%87%AA%E5%B7%B1GitHub%E4%B8%8A%E7%9A%84%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external"><i class="fa fa-book"></i> 如何让谷歌和百度搜索到自己在GitHub上的博客</a></p>
<hr>
<blockquote>
<p>未完待续</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是在建站的中途开始写的，记录一下自己修改的部分和使用的方法，仅供参考。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;样式页面样式修改&quot;&gt;&lt;a href=&quot;#样式页面样式修改&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="JustForFun" scheme="https://simguo.github.io/categories/JustForFun/"/>
    
    
      <category term="前端" scheme="https://simguo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="博客" scheme="https://simguo.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://simguo.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://simguo.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>fullPage.js学习</title>
    <link href="https://simguo.github.io/2017/07/27/fullPage-js%E5%AD%A6%E4%B9%A0/"/>
    <id>https://simguo.github.io/2017/07/27/fullPage-js学习/</id>
    <published>2017-07-27T09:10:04.000Z</published>
    <updated>2017-08-03T15:38:50.867Z</updated>
    
    <content type="html"><![CDATA[<script type="text/x-mathjax-config">
MathJax.Hub.Config({
tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>


<h1 id="一-fullPage-js插件"><a href="#一-fullPage-js插件" class="headerlink" title="(一) fullPage.js插件"></a>(一) fullPage.js插件</h1><p>fullPage.js是基于JQuery的插件，因此在引入之前需要先引入jQuery</p>
<p><i class="fa fa-dot-circle-o"></i> 使用<a href="https://github.com/alvarotrigo/fullPage.js" target="_blank" rel="external"><code>github</code></a>官方地址引入最新版本<br>最新版本在文件夹dist中，可以打开文件夹，选择对应的<code>jquery.fullpage.js(css)</code>文件，在html中可直接如下引入：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.</span></span></div><div class="line">js"&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">"https://rawgit.com/alvarotrigo/fullPage.js/master/dist/jquery.</span></span></div><div class="line">fullpage.css"&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span> = <span class="string">"https://rawgit.com/alvarotrigo/fullPage.js/master/dist/jquery.</span></span></div><div class="line">fullpage.js"&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><i class="fa fa-bookmark-o"></i> <strong>小技巧</strong></p>
<blockquote>
<p>在使用github原码时，一般在点击raw的时候的地址形如:<br><code>https://raw.githubusercontent.com/username/repository/branch/folder/file</code>.<br>如果直接引入这个地址，应该会在console中报错为“js文件不是可执行的”<br>只需要把前面的<code>raw.githubusercontent.com</code>改成<code>rawgit.com</code>即可</p>
</blockquote>
<p><i class="fa fa-dot-circle-o"></i> 从<a href="https://cdnjs.com/" target="_blank" rel="external"><code>cdnjs</code></a>引入固定版本</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax</span></span></div><div class="line">/libs/fullPage.js/2.9.4/jquery.fullpage.css"&gt;</div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.</span></span></div><div class="line">js"&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.9.4/jquery.</span></span></div><div class="line">fullpage.js"&gt;<span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p><i class="fa fa-dot-circle-o"></i> 当然，也可以自行下载js文件，直接从本地引入，这样就不需要担心自己在写网页的时候会遇到网络问题啦 ~&gt; $\omega$ &lt;~</p>
<h1 id="二-fullPage-js整体布局"><a href="#二-fullPage-js整体布局" class="headerlink" title="(二) fullPage.js整体布局"></a>(二) fullPage.js整体布局</h1><p>fullPage.js的整体是由 <code>section</code>和<code>slide</code>构成的，竖直方向由<code>section</code>组成，横向方向</p>
<p>对于你想使用fullPage.js的网页的部分，你可以使用如下的结构：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">"yourid"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"section"</span>&gt;</span> ...内容...  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"section"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span> ...内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span> ...内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span> ...内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"section"</span>&gt;</span> ...内容...  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span> = <span class="string">"section"</span>&gt;</span> ...内容...  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>其中<code>yourid</code>可以指定你在网页的哪个部分使用fullPage.js，比如，你可以使用fullPage.js写一个滚动显示图片的部分。</p>
<p>在自己想使用fullPage.js的地方使用如上结构之后，在HTML中加入如下的script代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line">    $(document).ready(function()&#123;</div><div class="line">        $('#yourid').fullpage(&#123;</div><div class="line">            //这里是一些配置项，这里我的配置项是为了能让页面自动滚动，并且头尾相接</div><div class="line">            continuousVertical: true,</div><div class="line">            afterRender: function()&#123;</div><div class="line">                setInterval(function()&#123;</div><div class="line">                    $.fn.fullpage.moveSectionDown();</div><div class="line">                &#125;,8000);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>关于<code>$(&#39;#yourid&#39;).fullpage()</code>函数中使用的配置项，<a href="http://www.dowebok.com/77.html" target="_blank" rel="external"><i class="fa fa-book"></i> jQuery全屏滚动插件fullPage.js</a> 一文中有详细说明，同时该文后也提供的在线演示：<a href="http://www.dowebok.com/demo/2014/77/" target="_blank" rel="external"><i class="fa fa-book"></i> jQuery全屏滚动插件fullPage.js演示</a> </p>
<h1 id="三-简单样例"><a href="#三-简单样例" class="headerlink" title="(三)简单样例"></a>(三)简单样例</h1><p>下面是简单的使用fullPage.js实现自动循环滚动的样例。</p>
<p></p><p data-height="240" data-theme-id="light" data-slug-hash="vJXrjw" data-default-tab="result" data-user="SimGuo" data-embed-version="2" data-pen-title="FullPage_Example" class="codepen">See the Pen <a href="https://codepen.io/SimGuo/pen/vJXrjw/" target="_blank" rel="external">FullPage_Example</a> by SimGuo (<a href="https://codepen.io/SimGuo" target="_blank" rel="external">@SimGuo</a>) on <a href="https://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

]]></content>
    
    <summary type="html">
    
      &lt;script type=&quot;text/x-mathjax-config&quot;&gt;
MathJax.Hub.Config({
tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}
});
&lt;/script&gt;


&lt;h1 id=&quot;一-fullP
    
    </summary>
    
      <category term="JustForFun" scheme="https://simguo.github.io/categories/JustForFun/"/>
    
    
      <category term="前端" scheme="https://simguo.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="https://simguo.github.io/tags/javascript/"/>
    
  </entry>
  
</feed>
